								TODO LIST
      parser
[x] parse block by white space and assign strings to args[] 					

      error checking
[x] exit on consecutive delimiters (with or without whitespaces)
[x] exit if a pipe has no command after it
[ ] exit if a pipe has no command before it
[ ] exit if an argument contains delimiters, redir etc and letters e.g >>file.txt (without whitespaces)
[x] exit if an argument contains whitespaces or qoutation marks  
[x] exit if a command block has more than a single redirection (output (exclusive) or input character)
[x] exit if a command block ends with one of the following chars: < , > , >>
[x] exit if a command block ends with  > , >> (including file name)
[x] exit if the command line ends with  < , > , >> (excluding file name)

      run
[x]  run pipe seperated commands
[x]  run pipe seperated commands with redirection
[x]  run mixed commands (e.g kate & ls | grep l)
[x]  run mixed commands (i.e IO REDIR + PIPE + BG)
[x]  run & seperated commands
[x]  run & seperated commands with redirection

      redirection
[x] identify redirection in block and extract filename 
[x] read and write from file    

      error log
[x] write errors to stderr using perror
[x] format error messages as: <command>: <error message>
[x] write to errors.log
[ ] catch all system call return values and check for errors
[ ] catch error for waitpid
[ ] catch error for fopen(filename, "r");
[x] catch error for execvp
[x] catch error for fork

      signal handling
[x] reap zombies using SIGCHLD
[ ] do something with exited child's status
[x] ignore CTRL - C

      exit commands
[x] exit on "exit" command  
[x] exit on end of stdin (i.e CTRL + D)

      unit tests
[/] errorchecker.c
[x] parse.c
      
      makefile
[x] create basic makefile
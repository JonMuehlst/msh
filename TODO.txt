								TODO LIST
      parser
[x] parse block by white space and assign strings to args[] 					

      error checking
[x] exit on consecutive delimiters (with or without whitespaces)
[x] exit if a pipe has no command after it
[ ] exit if a pipe has no command before it
[ ] exit if an argument contains delimiters, redir etc and letters e.g >>file.txt (without whitespaces)
[x] exit if an argument contains whitespaces or qoutation marks  
[x] exit if a command block has more than a single redirection (output (exclusive) or input character)
[x] exit if a command block ends with one of the following chars: < , > , >>
[x] exit if a command block ends with  > , >> (including file name)
[x] exit if the command line ends with  < , > , >> (excluding file name)

      executer
[ ]  
[ ]  
[ ]  

      redirection
[ ] > 
[ ] >> 
[ ] < 

      background
[ ]  
[ ]  
[ ]  

      delimiter &
[ ]  
[ ]  
[ ]   

      delimiter |
[ ]  
[ ]  
[ ]  
    
      error log
[ ] write(?) errors to stderr (perror)
[ ] format error messages as: <command>: <error message>
[ ] write to errors.log

      signal handling
[ ] reap zombies using SIGCHLD

      exit commands
[x] exit on "exit" command  
[x] exit on end of stdin (i.e CTRL + D)

      unit tests
[/] errorchecker.c
[x] parse.c